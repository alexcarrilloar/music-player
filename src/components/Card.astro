---
import type {ImageMetadata} from 'astro';
import { Image } from 'astro:assets';


interface Props {
	id: string;
	title: string;
	subTitle: string;
	imagePath: string;
	songPath: string;
}

const {id, title, subTitle, imagePath, songPath} = Astro.props;
const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/*.{jpeg,jpg,png,gif}')
if (!images[imagePath]) throw new Error(`"${imagePath}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`);

---
	
<div id={"card-btns-" + id} class="card" hidden>
	<div class="container">
		<div class="album-container">
			<Image src={images[imagePath]()} alt={title} class='album'>
		</div>
		<h2 >{title}</h2>
		<h3>{subTitle}</h3>
		<div id="bar-progress" class="bar-progress">
			<div id={"progress-id-" + id} class="progress"></div>
			<div class="song-duration">
				<span id={"current-time-" + id} class="current-time">0:00</span>
				<span id={"duration-" + id} class="duration">0:00</span>
			</div>
		</div>
		<div class="container-player">
			<div class="player-buttons">
				<div class="backward-btns" id={"container-backward-" + id}><i class="fa fa-backward fa-4x" aria-hidden="true"></i></div>
				<div class="play-btns" id={"container-play-" + id} ><i class="fa fa-play fa-4x active" aria-hidden="true"></i></div>
				<div class="pause-btns" id={"container-pause-" + id} hidden><i class="fa fa-pause fa-4x" aria-hidden="true" ></i></div>
				<div class="foward-btns" id={"container-foward-" + id}><i class="fa fa-forward fa-4x" aria-hidden="true"></i></div>
				<input id={'song-' + id} song-id={id} song-data-url={songPath} hidden>
			</div>
		</div>
	</div>
</div>
<script>

    var audio;

	const playBtns = document.querySelectorAll(".play-btns");
	
	playBtns.forEach(function(btn)  {
		btn.addEventListener("click", function(){
			let id = getNumId();
			const btnPlay = document.getElementById(btn.id);
			const btnPause = document.getElementById("container-pause-" + id);

			btnPlay.hidden = true;
			btnPause.hidden = false;
			
			if(audio!= null){
				audio.play();
			}else{
				const songUrl = document.getElementById("song-"+id).getAttribute("song-data-url");
				audio = new Audio(songUrl);
				audio.addEventListener("ended", handleEndSong);
				audio.addEventListener("timeupdate", handleProgressBar );
				audio.play();
			}
		});
	});

	function handleEndSong(){
		const allCards = Array.from(document.querySelectorAll(".card"),) as HTMLElement[];
		const currentCard = allCards.filter((x) => x.style.display != "none",)[0];
		const id = currentCard.id.slice(currentCard.id.lastIndexOf("-") + 1,);
		const nextId = Number(id) + 1;
		const nextCard = document.getElementById("card-btns-" + nextId);

		if (nextCard != null) {
			handlePlayPauseVisible(id, true);
			currentCard.style.display = "none";
			nextCard.style.display = "block";
			audio = null;
			const playBtn = document.getElementById("container-play-" + nextId,);
			playBtn.click();
		} else {
			audio.pause();
			audio = null;
			handlePlayPauseVisible(id, true);
			currentCard.style.display = "none";
			const firstCard = document.getElementById("card-btns-1");
			firstCard.style.display = "block";
			const playBtn = document.getElementById("container-play-1");
			playBtn.click();
		}
	}

	const pauseBtns = document.querySelectorAll(".pause-btns");
	pauseBtns.forEach(function(btn)  {
		btn.addEventListener("click", function(){
			let id = btn.id.slice(btn.id.lastIndexOf("-")+1);
			const btnPlay = document.getElementById("container-play-" + id);
			const btnPause = document.getElementById(btn.id);

			btnPlay.hidden = false;
			btnPause.hidden = true;
			audio.pause();
		});
	});

	const fowardBtns = document.querySelectorAll(".foward-btns");
	fowardBtns.forEach(function(btn)  {
		btn.addEventListener("click", function(){
		
			let id = btn.id.slice(btn.id.lastIndexOf("-")+1);
			let nextId = Number(id)+1;
			const currentCard = document.getElementById("card-btns-" + id);
			const nextCard = document.getElementById("card-btns-" + nextId);
			if(audio != null){
				audio.pause();
				audio = null;
			}
			
			if(nextCard != null){
				handlePlayPauseVisible(id, true);
				currentCard.style.display = 'none';
				nextCard.style.display = 'block';
				const playBtn = document.getElementById("container-play-" + nextId);
				playBtn.click();
			}else{
				handlePlayPauseVisible(id, true);
				currentCard.style.display = 'none';
				const firstCard = document.getElementById("card-btns-1");
				firstCard.style.display = 'block';
				const playBtn = document.getElementById("container-play-1");
				playBtn.click();
			}
		});
	});

	function handlePlayPauseVisible(id:string, setPlay:boolean){		
		const btnPlay = document.getElementById("container-play-" +id);
		const btnPause = document.getElementById("container-pause-" + id);
		if(setPlay){
			btnPlay.hidden = false;
			btnPause.hidden = true;
		}
		else
		{
			btnPlay.hidden = true;
			btnPause.hidden = false;
		}
	}

	const backwardBtns = document.querySelectorAll(".backward-btns");
	backwardBtns.forEach(function(btn){
		btn.addEventListener("click",() =>{
			
			if(audio == null){
				return;
			}
			let id = btn.id.slice(btn.id.lastIndexOf("-")+1);
			let prevId = Number(id) - 1;

			const currentCard = document.getElementById("card-btns-" + id);
			const prevCard = document.getElementById("card-btns-" + prevId);

			if(audio.currentTime < 2 && id != "1"){			
				audio.pause();
				audio = null;
				handlePlayPauseVisible(id, true);
				currentCard.style.display = 'none';
				prevCard.style.display = 'block';
				const playBtn = document.getElementById("container-play-" + prevId);
				playBtn.click();
			}else{
				audio.currentTime = 0;
			}

		})
	});

	const progressBars = document.querySelectorAll(".bar-progress");
	progressBars.forEach((bar) => {
		bar.addEventListener("click", (e)=> moveProgressBar(e), false);
	})

	const moveProgressBar = (e) => {
		let element = e.target as HTMLElement;
		if(!element.id.includes("bar-progress")){
			element = element.parentElement;
		}
		const width = element.clientWidth;
		const position = e.offsetX;
		if(audio != null){
			audio.currentTime = (position / width) * audio.duration;
		}
		
	};

	const handleProgressBar = () => {
		
		const {duration, currentTime} = audio;
		const percentage = (currentTime / duration) * 100;
		
		const id = getNumId();
		const progressBar = document.getElementById('progress-id-'+id);
		progressBar.style.width = `${percentage}%`;
		
		const formattedTime = (time) =>	String(Math.floor(time)).padStart(2,'0');

		const elementDuration = document.getElementById("duration-"+id);
		const elementCurrentTime = document.getElementById("current-time-"+id);	

		elementCurrentTime.textContent = isNaN(currentTime)? "00:00" : `${formattedTime(currentTime/60)}:${formattedTime(currentTime%60)}`
		elementDuration.textContent = isNaN(duration)? "00:00" : `${formattedTime(duration /60)}:${formattedTime(duration%60)}`
	}

	function getNumId(){
		const allCards = Array.from(document.querySelectorAll(".card"),) as HTMLElement[];
		const currentCard = allCards.filter((x) => x.style.display != "none",)[0];
		const id = currentCard.id.slice(currentCard.id.lastIndexOf("-") + 1,);
		return Number(id);
	}

	const firstElement = document.getElementById("card-btns-1");
	firstElement.style.display = 'block';
</script>
<style>

	.play-btns{
		cursor: pointer;
		color: #1d1d22;
	}

	.backward-btns{
		cursor: pointer;
		color: #1d1d22;
	}

	.pause-btns{
		cursor: pointer;
		color: #1d1d22;
	}

	.foward-btns{
		cursor: pointer;
		color: #1d1d22;
	}

	.container-player{
        width: 100%;
        justify-content: center;
        flex-wrap:nowrap;
        display: flex;   
        margin-top: 10px;    
    }

    .player-buttons{
        display:flex;
        flex-direction:row;
        flex-wrap:nowrap;
        justify-content:space-around;
        align-items:unset;
        align-content:flex-start;
        height: 50px;
        width: 80%;
    }

	.bar-progress{
		background-color: #fff;
		border-radius: 5px;
		cursor: pointer;
		margin: 40px 20px 35px;
		height: 6px;
		width: 90%;
	}

	.progress{
		background-color: #212121;
		border-radius: 5px;
		height: 100%;
		width: 0%;
		transition: width 0.1s linear;
	}

	.song-duration{
		position: relative;
		top: -25px;
		display: flex;
		justify-content: space-between;
	}

	h2{
		font-size: 25px;
		text-align: center;
		font-weight: 500px;
		margin: 30px 0 0;
		font-family: "Roboto", sans-serif;
		font-weight: 700;
		font-style: normal;
	}

	h3{
		font-size: 18px;
		text-align: center;
		font-weight: 500;
		max-resolution: 10px;
		font-family: "Roboto", sans-serif;
		font-weight: 500;
		font-style: normal;
	}

	.current-time{
		font-family: "Roboto", sans-serif;
		font-weight: 400;
		font-style: normal;
	}

	.duration{
		font-family: "Roboto", sans-serif;
		font-weight: 400;
		font-style: normal;
	}

    .album{
        object-fit: cover;
        border-radius: 20px;
        width: 250px;
        height: 250px;
        box-shadow: 0 5px 30px 5px rgba(0, 0, 0, 0.5);
    }

	.album-container{
		display: flex;
		position: relative;
		justify-content: center;
		width: 100%;
		top: -50px;
	}

	.container{
		background-color: #e7e7e7;
		height: 530px;
		width: 400px;
		border-radius: 20px;
		box-shadow: 0 3px 35px rgb(205 0 219 / 60%);
		transition: all 0.5s ease;
	}

	.card{
		display: none;
		flex-grow: 0;
		flex-shrink: 1;
		flex-basis: auto;
		align-self: auto;
		order: 0;
		
	}

	.container:hover{
		box-shadow: 0 0px 77px rgb(205 0 219 / 60%)
	}
</style>
